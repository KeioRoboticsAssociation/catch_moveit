In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/sensor_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_sensor.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/profile_manager.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/profile_manager.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/pointcloud_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/pointcloud_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/ros_utils.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:174: CMakeFiles/realsense2_camera.dir/src/sensor_params.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/named_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/named_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/dynamic_params.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/dynamic_params.h:16,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/sensor_params.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:20,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/align_depth_filter.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/align_depth_filter.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:146: CMakeFiles/realsense2_camera.dir/src/ros_utils.cpp.o] Error 1
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:132: CMakeFiles/realsense2_camera.dir/src/ros_sensor.cpp.o] Error 1
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/parameters.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::frame_callback(rs2::frame)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:629:27: error: ‘labeled_points’ is not a member of ‘rs2’
  629 |             if (f.is<rs2::labeled_points>())
      |                           ^~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:629:42: error: no matching function for call to ‘rs2::frame::is<<expression error> >()’
  629 |             if (f.is<rs2::labeled_points>())
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:581:14: note: candidate: ‘template<class T> bool rs2::frame::is() const’
  581 |         bool is() const
      |              ^~
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:581:14: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:629:42: error: template argument 1 is invalid
  629 |             if (f.is<rs2::labeled_points>())
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:631:52: error: ‘labeled_points’ is not a member of ‘rs2’
  631 |                 publishLabeledPointCloud(f.as<rs2::labeled_points>(), t);
      |                                                    ^~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:631:67: error: no matching function for call to ‘rs2::frame::as<<expression error> >()’
  631 |                 publishLabeledPointCloud(f.as<rs2::labeled_points>(), t);
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:591:11: note: candidate: ‘template<class T> T rs2::frame::as() const’
  591 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:591:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:631:67: error: template argument 1 is invalid
  631 |                 publishLabeledPointCloud(f.as<rs2::labeled_points>(), t);
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:638:36: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
  638 |             else if(stream_type == RS2_STREAM_OCCUPANCY)
      |                                    ^~~~~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_COUNT
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:230: CMakeFiles/realsense2_camera.dir/src/profile_manager.cpp.o] Error 1
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:689:27: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
  689 |         if(stream_type == RS2_STREAM_OCCUPANCY)
      |                           ^~~~~~~~~~~~~~~~~~~~
      |                           RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:705:28: error: ‘labeled_points’ is not a member of ‘rs2’
  705 |     else if (frame.is<rs2::labeled_points>())
      |                            ^~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:705:43: error: no matching function for call to ‘rs2::frame::is<<expression error> >()’
  705 |     else if (frame.is<rs2::labeled_points>())
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:581:14: note: candidate: ‘template<class T> bool rs2::frame::is() const’
  581 |         bool is() const
      |              ^~
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:581:14: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:705:43: error: template argument 1 is invalid
  705 |     else if (frame.is<rs2::labeled_points>())
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:712:48: error: ‘labeled_points’ is not a member of ‘rs2’
  712 |         publishLabeledPointCloud(frame.as<rs2::labeled_points>(), t);
      |                                                ^~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:712:63: error: no matching function for call to ‘rs2::frame::as<<expression error> >()’
  712 |         publishLabeledPointCloud(frame.as<rs2::labeled_points>(), t);
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:591:11: note: candidate: ‘template<class T> T rs2::frame::as() const’
  591 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_frame.hpp:591:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:712:63: error: template argument 1 is invalid
  712 |         publishLabeledPointCloud(frame.as<rs2::labeled_points>(), t);
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp: In member function ‘bool realsense2_camera::BaseRealSenseNode::shouldPublishCameraInfo(const stream_index_pair&)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:933:23: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
  933 |     return (stream != RS2_STREAM_SAFETY && stream != RS2_STREAM_OCCUPANCY && stream != RS2_STREAM_LABELED_POINT_CLOUD);
      |                       ^~~~~~~~~~~~~~~~~
      |                       RS2_STREAM_ANY
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:160: CMakeFiles/realsense2_camera.dir/src/dynamic_params.cpp.o] Error 1
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:933:54: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
  933 |     return (stream != RS2_STREAM_SAFETY && stream != RS2_STREAM_OCCUPANCY && stream != RS2_STREAM_LABELED_POINT_CLOUD);
      |                                                      ^~~~~~~~~~~~~~~~~~~~
      |                                                      RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:933:88: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
  933 |     return (stream != RS2_STREAM_SAFETY && stream != RS2_STREAM_OCCUPANCY && stream != RS2_STREAM_LABELED_POINT_CLOUD);
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::publishOccupancyFrame(rs2::frame, const rclcpp::Time&)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:945:55: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS’ was not declared in this scope
  945 |     auto cols = static_cast<int>(f.get_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS)); // grid cells width
      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:946:55: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS’ was not declared in this scope; did you mean ‘RS2_FRAME_METADATA_SEQUENCE_ID’?
  946 |     auto rows = static_cast<int>(f.get_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS)); // grid cells height
      |                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                       RS2_FRAME_METADATA_SEQUENCE_ID
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:947:62: error: ‘RS2_FRAME_METADATA_OCCUPANCY_CELL_SIZE’ was not declared in this scope; did you mean ‘RS2_FRAME_METADATA_SEQUENCE_SIZE’?
  947 |     auto cell_size = static_cast<float>(f.get_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_CELL_SIZE) / 100.0f); // convert to meters
      |                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                              RS2_FRAME_METADATA_SEQUENCE_SIZE
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp: At global scope:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:979:6: error: variable or field ‘publishLabeledPointCloud’ declared void
  979 | void BaseRealSenseNode::publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t)
      |      ^~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:979:55: error: ‘labeled_points’ is not a member of ‘rs2’
  979 | void BaseRealSenseNode::publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t)
      |                                                       ^~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:979:75: error: expected primary-expression before ‘const’
  979 | void BaseRealSenseNode::publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t)
      |                                                                           ^~~~~
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/actions.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::publishFrame(rs2::frame, const rclcpp::Time&, const stream_index_pair&, std::map<std::pair<rs2_stream, int>, cv::Mat>&, const std::map<std::pair<rs2_stream, int>, std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::CameraInfo_<std::allocator<void> > > > >&, const std::map<std::pair<rs2_stream, int>, std::shared_ptr<realsense2_camera::image_publisher> >&, bool)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:1155:28: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
 1155 |         if(stream.first == RS2_STREAM_OCCUPANCY)
      |                            ^~~~~~~~~~~~~~~~~~~~
      |                            RS2_STREAM_COUNT
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:188: CMakeFiles/realsense2_camera.dir/src/named_filter.cpp.o] Error 1
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:1157:44: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS’ was not declared in this scope; did you mean ‘RS2_FRAME_METADATA_SEQUENCE_ID’?
 1157 |             if (!f.supports_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS) ||
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                            RS2_FRAME_METADATA_SEQUENCE_ID
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:202: CMakeFiles/realsense2_camera.dir/src/pointcloud_filter.cpp.o] Error 1
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:1158:44: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS’ was not declared in this scope
 1158 |                 !f.supports_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS))
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:1161:59: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS’ was not declared in this scope
 1161 |             width = static_cast<int>(f.get_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_COLUMNS));
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/base_realsense_node.cpp:1162:60: error: ‘RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS’ was not declared in this scope; did you mean ‘RS2_FRAME_METADATA_SEQUENCE_ID’?
 1162 |             height = static_cast<int>(f.get_frame_metadata(RS2_FRAME_METADATA_OCCUPANCY_GRID_ROWS));
      |                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                            RS2_FRAME_METADATA_SEQUENCE_ID
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:216: CMakeFiles/realsense2_camera.dir/src/align_depth_filter.cpp.o] Error 1
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/string:40,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/constants.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:18,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:36: error: ‘RS2_STREAM_SAFETY’ was not declared in this scope; did you mean ‘RS2_STREAM_ANY’?
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                    ^~~~~~~~~~~~~~~~~
      |                                    RS2_STREAM_ANY
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:36:56: note:   candidate expects 0 arguments, 2 provided
   36 |     const stream_index_pair SAFETY{RS2_STREAM_SAFETY, 0};
      |                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:49: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:37:82: note:   candidate expects 0 arguments, 2 provided
   37 |     const stream_index_pair LABELED_POINT_CLOUD{RS2_STREAM_LABELED_POINT_CLOUD, 0};
      |                                                                                  ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:39: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                       ^~~~~~~~~~~~~~~~~~~~
      |                                       RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: error: no matching function for call to ‘std::pair<rs2_stream, int>::pair(<brace-enclosed initializer list>)’
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = rs2_stream; _T2 = int]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = rs2_stream; _T2 = int]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, rs2_stream, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, rs2_stream, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, int>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<rs2_stream, _U1>::value) || (! std::is_same<int, _U2>::value)), rs2_stream, int>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = rs2_stream; _T2 = int]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_sensor.h:22,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:63,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/include/ros_utils.h:38:62: note:   candidate expects 0 arguments, 2 provided
   38 |     const stream_index_pair OCCUPANCY{RS2_STREAM_OCCUPANCY, 0};
      |                                                              ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/specfun.h:45,
                 from /usr/include/c++/11/cmath:1935,
                 from /usr/include/c++/11/math.h:36,
                 from /opt/ros/humble/include/librealsense2/rsutil.h:10,
                 from /opt/ros/humble/include/librealsense2/rs.h:16,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:7,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = rs2_stream; _T2 = int]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = rs2_stream; _T2 = int]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/realsense_node_factory.h:19,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/realsense_node_factory.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In lambda function:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:25:54: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
   25 |                              { return sensor.is<rs2::safety_sensor>(); });
      |                                                      ^~~~~~~~~~~~~
      |                                                      pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:25:68: error: no matching function for call to ‘rs2::sensor::is<<expression error> >()’
   25 |                              { return sensor.is<rs2::safety_sensor>(); });
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note: candidate: ‘template<class T> bool rs2::sensor::is() const’
  326 |         bool is() const
      |              ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:25:68: error: template argument 1 is invalid
   25 |                              { return sensor.is<rs2::safety_sensor>(); });
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::setAvailableSensors()’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:171:28: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
  171 |             sensor.is<rs2::safety_sensor>() ||
      |                            ^~~~~~~~~~~~~
      |                            pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:171:42: error: no matching function for call to ‘rs2::sensor::is<<expression error> >()’
  171 |             sensor.is<rs2::safety_sensor>() ||
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note: candidate: ‘template<class T> bool rs2::sensor::is() const’
  326 |         bool is() const
      |              ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:171:42: error: template argument 1 is invalid
  171 |             sensor.is<rs2::safety_sensor>() ||
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:172:28: error: ‘depth_mapping_sensor’ is not a member of ‘rs2’
  172 |             sensor.is<rs2::depth_mapping_sensor>())
      |                            ^~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:172:49: error: no matching function for call to ‘rs2::sensor::is<<expression error> >()’
  172 |             sensor.is<rs2::depth_mapping_sensor>())
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note: candidate: ‘template<class T> bool rs2::sensor::is() const’
  326 |         bool is() const
      |              ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:326:14: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:172:49: error: template argument 1 is invalid
  172 |             sensor.is<rs2::depth_mapping_sensor>())
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::SafetyPresetReadService(realsense2_camera_msgs::srv::SafetyPresetRead_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::SafetyPresetRead_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:82:54: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
   82 |         res->safety_preset = _safety_sensor->as<rs2::safety_sensor>().get_safety_preset(req->index);
      |                                                      ^~~~~~~~~~~~~
      |                                                      pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:82:68: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
   82 |         res->safety_preset = _safety_sensor->as<rs2::safety_sensor>().get_safety_preset(req->index);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:82:68: error: template argument 1 is invalid
   82 |         res->safety_preset = _safety_sensor->as<rs2::safety_sensor>().get_safety_preset(req->index);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::SafetyPresetWriteService(realsense2_camera_msgs::srv::SafetyPresetWrite_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::SafetyPresetWrite_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:97:33: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
   97 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_preset(req->index, req->safety_preset);
      |                                 ^~~~~~~~~~~~~
      |                                 pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:97:47: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
   97 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_preset(req->index, req->safety_preset);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:97:47: error: template argument 1 is invalid
   97 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_preset(req->index, req->safety_preset);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::SafetyInterfaceConfigReadService(realsense2_camera_msgs::srv::SafetyInterfaceConfigRead_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::SafetyInterfaceConfigRead_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:112:9: error: ‘rs2_calib_location’ was not declared in this scope
  112 |         rs2_calib_location location = static_cast<rs2_calib_location>(req->calib_location);
      |         ^~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:113:64: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
  113 |         res->safety_interface_config = _safety_sensor->as<rs2::safety_sensor>().get_safety_interface_config(location);
      |                                                                ^~~~~~~~~~~~~
      |                                                                pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:113:78: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
  113 |         res->safety_interface_config = _safety_sensor->as<rs2::safety_sensor>().get_safety_interface_config(location);
      |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:113:78: error: template argument 1 is invalid
  113 |         res->safety_interface_config = _safety_sensor->as<rs2::safety_sensor>().get_safety_interface_config(location);
      |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::stopPublishers(const std::vector<rs2::stream_profile>&)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:211:41: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
  211 |             if(profile.stream_type() == RS2_STREAM_LABELED_POINT_CLOUD && _labeled_pointcloud_publisher)
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:113:109: error: ‘location’ was not declared in this scope; did you mean ‘localtime’?
  113 |         res->safety_interface_config = _safety_sensor->as<rs2::safety_sensor>().get_safety_interface_config(location);
      |                                                                                                             ^~~~~~~~
      |                                                                                                             localtime
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:107:139: warning: unused parameter ‘req’ [-Wunused-parameter]
  107 | void BaseRealSenseNode::SafetyInterfaceConfigReadService(const realsense2_camera_msgs::srv::SafetyInterfaceConfigRead::Request::SharedPtr req,
      |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::SafetyInterfaceConfigWriteService(realsense2_camera_msgs::srv::SafetyInterfaceConfigWrite_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::SafetyInterfaceConfigWrite_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:128:33: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
  128 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_interface_config(req->safety_interface_config);
      |                                 ^~~~~~~~~~~~~
      |                                 pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:128:47: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
  128 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_interface_config(req->safety_interface_config);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:128:47: error: template argument 1 is invalid
  128 |         _safety_sensor->as<rs2::safety_sensor>().set_safety_interface_config(req->safety_interface_config);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::ApplicationConfigReadService(realsense2_camera_msgs::srv::ApplicationConfigRead_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::ApplicationConfigRead_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:144:59: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
  144 |         res->application_config = _safety_sensor->as<rs2::safety_sensor>().get_application_config();
      |                                                           ^~~~~~~~~~~~~
      |                                                           pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:144:73: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
  144 |         res->application_config = _safety_sensor->as<rs2::safety_sensor>().get_application_config();
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:144:73: error: template argument 1 is invalid
  144 |         res->application_config = _safety_sensor->as<rs2::safety_sensor>().get_application_config();
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::ApplicationConfigWriteService(realsense2_camera_msgs::srv::ApplicationConfigWrite_Request_<std::allocator<void> >::SharedPtr, realsense2_camera_msgs::srv::ApplicationConfigWrite_Response_<std::allocator<void> >::SharedPtr)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:159:33: error: ‘safety_sensor’ is not a member of ‘rs2’; did you mean ‘pose_sensor’?
  159 |         _safety_sensor->as<rs2::safety_sensor>().set_application_config(req->application_config);
      |                                 ^~~~~~~~~~~~~
      |                                 pose_sensor
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:159:47: error: no matching function for call to ‘rs2::sensor::as<<expression error> >()’
  159 |         _safety_sensor->as<rs2::safety_sensor>().set_application_config(req->application_config);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /opt/ros/humble/include/librealsense2/hpp/rs_device.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_record_playback.hpp:8,
                 from /opt/ros/humble/include/librealsense2/hpp/rs_context.hpp:8,
                 from /opt/ros/humble/include/librealsense2/rs.hpp:9,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:17,
                 from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:15:
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note: candidate: ‘template<class T> T rs2::sensor::as() const’
  333 |         T as() const
      |           ^~
/opt/ros/humble/include/librealsense2/hpp/rs_sensor.hpp:333:11: note:   template argument deduction/substitution failed:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/safety.cpp:159:47: error: template argument 1 is invalid
  159 |         _safety_sensor->as<rs2::safety_sensor>().set_application_config(req->application_config);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::startPublishers(const std::vector<rs2::stream_profile>&, const realsense2_camera::RosSensor&)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:252:42: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
  252 |             if (profile.stream_type() == RS2_STREAM_OCCUPANCY)
      |                                          ^~~~~~~~~~~~~~~~~~~~
      |                                          RS2_STREAM_COUNT
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/rs_node_setup.cpp:259:46: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
  259 |             else if(profile.stream_type() == RS2_STREAM_LABELED_POINT_CLOUD)
      |                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:104: CMakeFiles/realsense2_camera.dir/src/parameters.cpp.o] Error 1
In file included from /home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:15:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/../include/base_realsense_node.h:277:39: error: ‘rs2::labeled_points’ has not been declared
  277 |         void publishLabeledPointCloud(rs2::labeled_points lpc, const rclcpp::Time& t);
      |                                       ^~~
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:272: CMakeFiles/realsense2_camera.dir/src/actions.cpp.o] Error 1
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp: In member function ‘void realsense2_camera::BaseRealSenseNode::calcAndAppendTransformMsgs(const rs2::stream_profile&, const rs2::stream_profile&)’:
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:178:33: error: ‘RS2_STREAM_LABELED_POINT_CLOUD’ was not declared in this scope
  178 |     if(profile.stream_type() == RS2_STREAM_LABELED_POINT_CLOUD ||
      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/a/ws_moveit2/src/realsense-ros/realsense2_camera/src/tfs.cpp:179:33: error: ‘RS2_STREAM_OCCUPANCY’ was not declared in this scope; did you mean ‘RS2_STREAM_COUNT’?
  179 |        profile.stream_type() == RS2_STREAM_OCCUPANCY)
      |                                 ^~~~~~~~~~~~~~~~~~~~
      |                                 RS2_STREAM_COUNT
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:90: CMakeFiles/realsense2_camera.dir/src/base_realsense_node.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:258: CMakeFiles/realsense2_camera.dir/src/tfs.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:76: CMakeFiles/realsense2_camera.dir/src/realsense_node_factory.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:286: CMakeFiles/realsense2_camera.dir/src/safety.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/realsense2_camera.dir/build.make:118: CMakeFiles/realsense2_camera.dir/src/rs_node_setup.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:159: CMakeFiles/realsense2_camera.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
