// generated from rosidl_adapter/resource/msg.idl.em
// with input from stm32_mavlink_interface/msg/RobomasterMotorState.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module stm32_mavlink_interface {
  module msg {
    module RobomasterMotorState_Constants {
      @verbatim (language="comment", text=
        "Status and diagnostics")
      const uint8 STATUS_OK = 0;
      const uint8 STATUS_NOT_INITIALIZED = 1;
      const uint8 STATUS_CAN_ERROR = 2;
      const uint8 STATUS_OUT_OF_RANGE = 3;
      const uint8 STATUS_TIMEOUT = 4;
      const uint8 STATUS_CONFIG_ERROR = 5;
      const uint8 STATUS_OVERHEAT = 6;
      const uint8 STATUS_OVERCURRENT = 7;
    };
    @verbatim (language="comment", text=
      "RoboMaster Motor State Message" "\n"
      "Current state and telemetry of a RoboMaster motor")
    struct RobomasterMotorState {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Motor identification" "\n"
        "Motor ID (1-8)")
      uint8 motor_id;

      @verbatim (language="comment", text=
        "Current measurements" "\n"
        "Current position in radians")
      float current_position_rad;

      @verbatim (language="comment", text=
        "Current velocity in rotations per second")
      float current_velocity_rps;

      @verbatim (language="comment", text=
        "Current draw in milliamps")
      int16 current_milliamps;

      @verbatim (language="comment", text=
        "Motor temperature in Celsius")
      uint8 temperature_celsius;

      @verbatim (language="comment", text=
        "Target values" "\n"
        "Target position in radians")
      float target_position_rad;

      @verbatim (language="comment", text=
        "Target velocity in rotations per second")
      float target_velocity_rps;

      @verbatim (language="comment", text=
        "Target current in milliamps")
      int16 target_current_ma;

      @verbatim (language="comment", text=
        "Control state" "\n"
        "Current control mode (0=current, 1=velocity, 2=position)")
      uint8 control_mode;

      @verbatim (language="comment", text=
        "Motor enabled state")
      boolean enabled;

      uint8 status;

      @verbatim (language="comment", text=
        "Statistics" "\n"
        "Timestamp of last command")
      uint32 last_command_time_ms;

      @verbatim (language="comment", text=
        "Number of command saturations")
      uint32 saturation_count;

      @verbatim (language="comment", text=
        "Number of communication timeouts")
      uint32 timeout_count;

      @verbatim (language="comment", text=
        "Number of errors")
      uint32 error_count;

      @verbatim (language="comment", text=
        "Number of overheating events")
      uint32 overheat_count;
    };
  };
};
