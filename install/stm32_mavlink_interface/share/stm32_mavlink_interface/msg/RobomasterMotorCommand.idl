// generated from rosidl_adapter/resource/msg.idl.em
// with input from stm32_mavlink_interface/msg/RobomasterMotorCommand.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module stm32_mavlink_interface {
  module msg {
    module RobomasterMotorCommand_Constants {
      @verbatim (language="comment", text=
        "Control mode")
      const uint8 CONTROL_MODE_CURRENT = 0;
      const uint8 CONTROL_MODE_VELOCITY = 1;
      const uint8 CONTROL_MODE_POSITION = 2;
    };
    @verbatim (language="comment", text=
      "RoboMaster Motor Command Message" "\n"
      "Motor control command for individual RoboMaster motors")
    struct RobomasterMotorCommand {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Motor identification" "\n"
        "Motor ID (1-8)")
      uint8 motor_id;

      uint8 control_mode;

      @verbatim (language="comment", text=
        "Command values (only one should be used based on control_mode)" "\n"
        "Target current in milliamps (-16000 to 16000)")
      int16 target_current_ma;

      @verbatim (language="comment", text=
        "Target velocity in rotations per second")
      float target_velocity_rps;

      @verbatim (language="comment", text=
        "Target position in radians")
      float target_position_rad;

      @verbatim (language="comment", text=
        "Control flags" "\n"
        "Enable/disable motor")
      boolean enabled;

      @verbatim (language="comment", text=
        "Reset watchdog timer")
      boolean reset_watchdog;

      @verbatim (language="comment", text=
        "Emergency stop this motor")
      boolean emergency_stop;
    };
  };
};
